{"version":3,"sources":["types.ts","api.ts","utils.ts","providers/ClientProvider.tsx","components/Header.tsx","pages/Login.tsx","pages/Editor.tsx","pages/PrivateRoute.tsx","pages/Contents.tsx","Router.tsx","pages/PageTemplate.tsx","providers/ThemeProvider.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["routes","isType","obj","keys","Array","isArray","every","arrItem","key","axiosInstance","axios","create","baseURL","authApi","login","loginData","a","post","LOGIN","token","data","localStorage","setItem","defaults","headers","authorization","keepAlive","get","KEEP_ALIVE","console","log","addToken","getItem","Error","createApi","apiName","options","publicApi","delete","put","name","params","body","articlesApi","ARTICLES","localesApi","LOCALES","categoriesKeysArray","mapCategoriesKeysToHebrewSubcategories","animals","aroundTheYear","betweenAManAndHisFriend","betweenIsraelAndGentiles","charity","circleOfLife","destructionToSalvation","educationAndCounselingAndNames","kosherKitchen","marriageAndPurity","monetary","mourning","prayersAndBlessings","sabbath","synagogueAndSacredObjects","faithAndView","customs","languages","decodeJwt","JSON","parse","atob","split","e","Context","createContext","locale","setSelectedLanguage","selectedLanguage","Promise","resolve","user","fullName","username","ClientProvider","props","children","useState","setUser","languagesArray","reduce","acc","language","localesData","setLocalsData","useQuery","onSuccess","localeObj","translation","Object","entries","forEach","translationLang","value","lang","useMemo","useEffect","useCallback","Provider","memo","useClientContext","useContext","createClasses","makeStyles","theme","appBar","backgroundColor","palette","background","paper","height","justifyContent","top","Header","classes","Box","AppBar","position","className","Typography","variant","align","color","container","formContainer","minWidth","minHeight","form","padding","gridGap","spacing","button","borderRadius","width","LoginPage","history","useHistory","error","toggleError","onSubmit","values","loginRes","push","Grid","justify","alignItems","item","xs","Paper","elevation","direction","initialValues","password","formikProps","handleChange","component","Form","onChange","as","TextField","label","type","Button","marginBottom","input","default","Select","useFormikContext","errors","touched","FormControl","fullWidth","InputLabel","MuiSelect","MenuProps","disablePortal","inputProps","map","option","MenuItem","FormHelperText","FormikForm","category","mapKeyToOption","withLocale","useMapKeyToOption","categoriesData","subcategory","useTheme","isMdDown","useMediaQuery","breakpoints","down","rows","my","articleName","helperText","title","InputProps","multiline","content","upload","EditorPage","goToContentsPage","validate","requiredField","res","alert","articleAddedSuccessfully","serverError","mx","editorPageTitle","onClick","toContentsPage","PrivateRoute","path","isAuthorized","exp","Date","now","removeItem","to","ContentsPage","contents","length","author","textContent","updatedAt","Router","exact","Login","Editor","Contents","PageTemplate","jss","plugins","jssPreset","rtl","createPalette","primary","main","light","dark","secondary","ThemeProvider","responsiveFontSizes","createMuiTheme","overrides","MuiInputBase","root","MuiFormLabel","MuiOutlinedInput","MuiButton","textTransform","StylesProvider","dir","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","App","QueryClientProvider","client","initialIsOpen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yIAqPYA,E,sNA1NL,SAASC,EAAUC,EAAcC,GACtC,QAAKD,IAIDE,MAAMC,QAAQH,GACTE,MAAMC,QAAQF,GACjBD,EAAII,OAAM,SAACC,GAAD,OAAsBJ,EAAKG,OAAM,SAACE,GAAD,OAASD,EAAQC,SAC5DN,EAAII,OAAM,SAACC,GAAD,OAAsBA,EAAQJ,MAGvCC,MAAMC,QAAQF,GAAQA,EAAKG,OAAM,SAACE,GAAD,OAASN,EAAIM,MAAQN,EAAIC,K,SA+MvDH,K,oBAAAA,E,oBAAAA,E,cAAAA,E,wBAAAA,E,gBAAAA,E,cAAAA,E,mBAAAA,M,KClPZ,IAGMS,EAAgBC,IAAMC,OAAO,CACjCC,QAHwC,SAMpCC,EAAU,CACdC,MAAM,WAAD,4BAAE,WAAOC,GAAP,iBAAAC,EAAA,+EAE2BP,EAAcQ,KAAd,WACxBjB,EAAOkB,OACXH,GAJC,uBAEWI,EAFX,EAEKC,KAIRC,aAAaC,QAAQ,QAASH,GAC9BV,EAAcc,SAASC,QAAQC,cAAgBN,EAP5C,kBAQIA,GARJ,4DAUI,GAVJ,0DAAF,mDAAC,GAaNO,UAAU,WAAD,4BAAE,8BAAAV,EAAA,+EAEuBP,EAAckB,IAAd,WAAsB3B,EAAO4B,aAFpD,gBAEOT,EAFP,EAECC,KACRC,aAAaC,QAAQ,QAASH,GAC9BV,EAAcc,SAASC,QAAQC,cAA/B,iBAAyDN,GAJlD,uDAMPU,QAAQC,IAAI,IAAZ,MANO,iFAAF,kDAAC,IAYNC,EAAW,SAACtB,GAChB,IAAMU,EAAQE,aAAaW,QAAQ,SACnC,GAAIb,EAEF,OADAV,EAAcc,SAASC,QAAQC,cAA/B,iBAAyDN,GAClDV,EAET,MAAMwB,MAAM,aAGd,SAASC,EACPC,GAWC,IAVDC,EAUA,uDARI,CACFC,UAAW,CACTV,KAAK,EACLW,QAAQ,EACRrB,MAAM,EACNsB,KAAK,IAIDF,EAAcD,EAAdC,UACR,MAAO,CACLG,KAAML,EACNR,IAAI,WAAD,4BAAE,WAAOc,GAAP,SAAAzB,EAAA,sEAEIqB,EAAUV,KACbI,EAAStB,GAHV,SAKaA,EAAckB,IAAd,WAAsBQ,GAAW,CAAEM,WALhD,uCAK2DrB,MAL3D,wHAAF,mDAAC,GAUJH,KAAK,WAAD,4BAAE,WAAOyB,GAAP,SAAA1B,EAAA,sEAEGqB,EAAUpB,MACbc,EAAStB,GAHT,SAKWA,EAAcQ,KAAd,UAAsBkB,GAAWO,GAL5C,gKAAF,mDAAC,IAaT,IAAMC,EAAcT,EAAmBlC,EAAO4C,UAExCC,EAAaX,EAAkBlC,EAAO8C,QAAS,CACnDT,UAAW,CACTV,KAAK,KCtFIoB,EAAsB,CACjC,gBACA,yBACA,sBACA,4BACA,UACA,WACA,gBACA,eACA,oBACA,0BACA,2BACA,UACA,eACA,iCACA,UACA,UACA,YAGWC,EAGT,CACFC,QAAS,CAAC,uEAAiB,kCAC3BC,cAAe,CACb,4EACA,8CACA,0DACA,8CACA,2BACA,6EACA,gEACA,iCACA,sEACA,oDACA,2BACA,iCACA,iCACA,qBACA,0DACA,wCACA,oDACA,uEACA,uCACA,uEAEFC,wBAAyB,CACvB,qBACA,gEACA,0DACA,qGACA,8CACA,6EACA,0DACA,2BACA,oDACA,wCACA,2BACA,0DACA,2DAEFC,yBAA0B,CAAC,wCAAW,oDAAa,2BAAQ,2DAC3DC,QAAS,CAAC,2DACVC,aAAc,CACZ,oDACA,8CACA,iCACA,4EACA,oDACA,oDACA,8CACA,sDACA,wCACA,kCAEFC,uBAAwB,CAAC,oDAAa,iCAAS,iCAAS,+CACxDC,+BAAgC,CAAC,uCAAU,2BAAQ,6CAAW,iEAC9DC,cAAe,CACb,uCACA,yFACA,0DACA,8CACA,+FACA,uHACA,oDACA,qGACA,iCACA,4EACA,2BACA,iCACA,8HACA,2FAEFC,kBAAmB,CACjB,kFACA,qGACA,sGACA,iCACA,0DACA,gEACA,6CACA,6CACA,iCACA,uCACA,gEACA,2DAEFC,SAAU,CACR,oDACA,wCACA,mFACA,qBACA,uCACA,2BACA,gGACA,gEACA,gEACA,iCACA,wCACA,8CACA,sEACA,2BACA,8CACA,4EACA,2BACA,kFACA,uCACA,uCACA,iCACA,0DACA,uCACA,uCACA,iCACA,uCACA,4EACA,4EACA,0DACA,gEACA,iCACA,4EACA,iCACA,iCACA,iCACA,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","file":"static/js/main.adb420ff.chunk.js","sourcesContent":["import { ReactNode } from 'react';\nimport { categoriesKeysArray, languages as languagesArray } from './utils';\n\n// Models\nexport interface User extends SchemaTimestampsConfig {\n  _id: string;\n  username: string;\n  password?: string;\n  fullName: string;\n}\n\nexport interface Article extends SchemaTimestampsConfig {\n  _id: string;\n  author: User | string;\n  content: string;\n  category: categoriesKeys;\n  subcategory: subcategoriesHebrew;\n  title: string;\n}\n\nexport interface Locale {\n  _id: string;\n  key: string;\n  translation: Record<languages, string>;\n}\n\n// Type guards\nexport function isType<T>(obj: T | any, keys: string | string[]): obj is T {\n  if (!obj) {\n    return false;\n  }\n\n  if (Array.isArray(obj)) {\n    return Array.isArray(keys)\n      ? obj.every((arrItem: T | any) => keys.every((key) => arrItem[key]))\n      : obj.every((arrItem: T | any) => arrItem[keys]);\n  }\n\n  return Array.isArray(keys) ? keys.every((key) => obj[key]) : obj[keys];\n}\n\n// Sheilta categories\nexport type categoriesKeys = typeof categoriesKeysArray[number];\n\n// Sheilta Subcategories\nexport type aroundTheYearSubcategories =\n  | 'שלושת השבועות'\n  | 'תשעה באב'\n  | 'תשעת הימים'\n  | 'ראש השנה'\n  | 'אלול'\n  | 'עשרת ימי תשובה'\n  | 'יום כיפורים'\n  | 'סוכות'\n  | 'ארבעת המינים'\n  | 'שמחת תורה'\n  | 'סוכה'\n  | 'חנוכה'\n  | 'פורים'\n  | 'פסח'\n  | 'כשרות הפסח'\n  | 'חג הפסח'\n  | 'מכירת חמץ'\n  | 'הלכות יום טוב'\n  | 'שבועות'\n  | 'ימים מיוחדים';\n\nexport type destructionToSalvationSubcategories =\n  | 'ארץ ישראל'\n  | 'חורבן'\n  | 'גאולה'\n  | 'בית מקדש';\n\nexport type prayersAndBlessingsSubcategories =\n  | 'תפילה'\n  | 'ברכות ההודיה'\n  | 'ברכות הנהנין';\n\nexport type synagogueAndSacredObjectsSubcategories =\n  | 'בית כנסת'\n  | 'תפילין'\n  | 'גניזה'\n  | 'מזוזה'\n  | 'קדושת ספרים'\n  | 'ספר תורה';\n\nexport type sabbathSubcategories =\n  | 'מלאכות שבת'\n  | 'אמירה לגוי'\n  | 'הנאה ממלאכה אסורה'\n  | 'מצוות השבת'\n  | 'כבוד השבת'\n  | 'תפילות בשבת'\n  | 'סעודות'\n  | 'קידוש והבדלה'\n  | 'קבלת שבת והדלקת נרות'\n  | 'טיפול בחולה בשבת'\n  | 'עירוב'\n  | 'מוקצה'\n  | 'ערב שבת';\n\nexport type mourningSubcategories =\n  | 'שבעה'\n  | 'אבלות כללי'\n  | 'לוויה וקבורה'\n  | 'יארצייט';\n\nexport type kosherKitchenSubcategories =\n  | 'תולעים'\n  | 'מאכלי ובישול גוי'\n  | 'כשרות הבשר'\n  | 'בשר בחלב'\n  | 'הגעלת וטבילת כלים'\n  | 'תרופות והמרחב הציבורי'\n  | 'הפרשת חלה'\n  | 'מצוות התלויות בארץ'\n  | 'כלאים'\n  | 'תרומות ומעשות'\n  | 'ערלה'\n  | 'שמיטה'\n  | 'מאכלים אסורים מחמת סכנה'\n  | 'יין נסך וסתם יינם';\n\nexport type circleOfLifeSubcategories =\n  | 'שגרת בוקר'\n  | 'שגרת ערב'\n  | 'קעקוע'\n  | 'נדרים ושבועות'\n  | 'שילוח הקן'\n  | 'ברית מילה'\n  | 'בל תשחית'\n  | 'גילוח - תער'\n  | 'לא ילבש'\n  | 'שעטנז';\n\nexport type marriageAndPuritySubcategories =\n  | 'ממזרות ויוחסין'\n  | 'גיור ובירורי יהדות'\n  | 'מניעת היריון, הפלות'\n  | 'ייחוד'\n  | 'נדה וטבילה'\n  | 'טומאת כהנים'\n  | 'נישואין'\n  | 'גירושין'\n  | 'אישות'\n  | 'צניעות'\n  | 'יבום וחליצה'\n  | 'פריה ורביה';\n\nexport type betweenAManAndHisFriendSubcategories =\n  | 'שקר'\n  | 'כיבוד הורים'\n  | 'לפני עיוור'\n  | 'כיבוד תלמידי חכמים'\n  | 'לשון הרע'\n  | 'בין ישראל לגוי'\n  | 'חוקות הגוי'\n  | 'גרים'\n  | 'עבודה זרה'\n  | 'לא תחנם'\n  | 'צדקה'\n  | 'הלכות צדקה'\n  | 'מעשר כספים';\n\nexport type betweenIsraelAndGentilesSubcategories =\n  | 'לא תחנם'\n  | 'עבודה זרה'\n  | 'גרים'\n  | 'חוקות הגוי';\n\nexport type charitySubcategories = 'מעשר כספים';\n\n// extends type faithAndViewSubcategories = ''\n\n// extends type customsSubcategories = ''\n\nexport type educationAndCounselingAndNamesSubcategories =\n  | 'מנהגים'\n  | 'קבלה'\n  | 'אינטרנט'\n  | 'חזרה בתשובה';\n\nexport type animalsSubcategories = 'סירוס' | 'צער בעלי חיים';\n\nexport type monetarySubcategories =\n  | 'מקח וממכר'\n  | 'מי שפרע'\n  | 'אונאה ומקח טעות'\n  | 'גוי'\n  | 'מצרנות'\n  | 'מתנה'\n  | 'אסמכתא, גמירות דעת'\n  | 'אונס ומודעה'\n  | 'עובד ומעביד'\n  | 'שטרות'\n  | 'בל תלין'\n  | 'בית הדין'\n  | 'דינא דמלכותא'\n  | 'עדות'\n  | 'וועד בית'\n  | 'חוזים והסכמים'\n  | 'שוכר'\n  | 'שוכרים וושתפים'\n  | 'הלוואה'\n  | 'פועלים'\n  | 'ערבות'\n  | 'דינא דגרמי'\n  | 'ערכאות'\n  | 'שומרים'\n  | 'ירושה'\n  | 'שליחות'\n  | 'שכירות פועלים'\n  | 'שירותי קבלנות'\n  | 'השבת אבידה'\n  | 'גזילה וגנבה'\n  | 'נזקים'\n  | 'תיווך והשקעות'\n  | 'ריבית'\n  | 'שכנים'\n  | 'מיסים'\n  | 'זכויות יוצרים'\n  | 'שואל';\n\nexport type subcategoriesHebrew =\n  | aroundTheYearSubcategories\n  | destructionToSalvationSubcategories\n  | prayersAndBlessingsSubcategories\n  | synagogueAndSacredObjectsSubcategories\n  | sabbathSubcategories\n  | monetarySubcategories\n  | kosherKitchenSubcategories\n  | circleOfLifeSubcategories\n  | marriageAndPuritySubcategories\n  | betweenAManAndHisFriendSubcategories\n  | betweenIsraelAndGentilesSubcategories\n  | charitySubcategories\n  | animalsSubcategories\n  | educationAndCounselingAndNamesSubcategories\n  | mourningSubcategories;\n\n// enums\nexport type languages = typeof languagesArray[number];\n\nexport type methods = 'post' | 'get' | 'delete' | 'put';\n\nexport enum routes {\n  SHEILTAS = 'sheiltas',\n  ARTICLES = 'articles',\n  LOGIN = 'login',\n  KEEP_ALIVE = 'keep-alive',\n  SIGNUP = 'signup',\n  USERS = 'users',\n  LOCALES = 'locales'\n}\n\ninterface SchemaTimestampsConfig {\n  createdAt?: boolean | string;\n  updatedAt?: boolean | string;\n  currentTime?: () => Date | number;\n}\n\nexport interface ChildrenProps {\n  children: ReactNode;\n}\n\nexport interface loginObj {\n  username: string;\n  password: string;\n}\n\nexport interface authData {\n  fullName: string;\n  username: string;\n  _id: string;\n}\n","import axios, { AxiosInstance } from 'axios';\nimport { Article, Locale, loginObj, methods, routes } from './types';\n\nconst baseURL =\n  process.env.NODE_ENV === 'production' ? '/api' : 'http://localhost:4000/api';\n\nconst axiosInstance = axios.create({\n  baseURL\n});\n\nconst authApi = {\n  login: async (loginData: loginObj): Promise<string | boolean> => {\n    try {\n      const { data: token } = await axiosInstance.post(\n        `/${routes.LOGIN}`,\n        loginData\n      );\n      localStorage.setItem('token', token);\n      axiosInstance.defaults.headers.authorization = token;\n      return token;\n    } catch (e) {\n      return false;\n    }\n  },\n  keepAlive: async () => {\n    try {\n      const { data: token } = await axiosInstance.get(`/${routes.KEEP_ALIVE}`);\n      localStorage.setItem('token', token);\n      axiosInstance.defaults.headers.authorization = `Bearer ${token}`;\n    } catch (e) {\n      console.log('e', e);\n      return e;\n    }\n  }\n};\n\nconst addToken = (axiosInstance: AxiosInstance) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    axiosInstance.defaults.headers.authorization = `Bearer ${token}`;\n    return axiosInstance;\n  }\n  throw Error('No token');\n};\n\nfunction createApi<T>(\n  apiName: routes,\n  options: {\n    publicApi: Partial<Record<methods, boolean>>;\n  } = {\n    publicApi: {\n      get: false,\n      delete: false,\n      post: false,\n      put: false\n    }\n  }\n) {\n  const { publicApi } = options;\n  return {\n    name: apiName,\n    get: async (params: unknown): Promise<T[]> => {\n      try {\n        if (!publicApi.get) {\n          addToken(axiosInstance);\n        }\n        return (await axiosInstance.get(`/${apiName}`, { params })).data;\n      } catch (e) {\n        return e;\n      }\n    },\n    post: async (body: Omit<T, '_id'>): Promise<T | string> => {\n      try {\n        if (!publicApi.post) {\n          addToken(axiosInstance);\n        }\n        return await axiosInstance.post(`${apiName}`, body);\n      } catch (e) {\n        return e;\n      }\n    }\n  };\n}\n\nconst articlesApi = createApi<Article>(routes.ARTICLES);\n\nconst localesApi = createApi<Locale>(routes.LOCALES, {\n  publicApi: {\n    get: true\n  }\n});\n\nexport { authApi, articlesApi, localesApi };\n","import { categoriesKeys, subcategoriesHebrew } from './types';\n\nexport const categoriesKeysArray = [\n  'aroundTheYear',\n  'destructionToSalvation',\n  'prayersAndBlessings',\n  'synagogueAndSacredObjects',\n  'sabbath',\n  'mourning',\n  'kosherKitchen',\n  'circleOfLife',\n  'marriageAndPurity',\n  'betweenAManAndHisFriend',\n  'betweenIsraelAndGentiles',\n  'charity',\n  'faithAndView',\n  'educationAndCounselingAndNames',\n  'customs',\n  'animals',\n  'monetary'\n] as const;\n\nexport const mapCategoriesKeysToHebrewSubcategories: Record<\n  categoriesKeys,\n  subcategoriesHebrew[]\n> = {\n  animals: ['צער בעלי חיים', 'סירוס'],\n  aroundTheYear: [\n    'שלושת השבועות',\n    'תשעה באב',\n    'תשעת הימים',\n    'ראש השנה',\n    'אלול',\n    'עשרת ימי תשובה',\n    'יום כיפורים',\n    'סוכות',\n    'ארבעת המינים',\n    'שמחת תורה',\n    'סוכה',\n    'חנוכה',\n    'פורים',\n    'פסח',\n    'כשרות הפסח',\n    'חג הפסח',\n    'מכירת חמץ',\n    'הלכות יום טוב',\n    'שבועות',\n    'ימים מיוחדים'\n  ],\n  betweenAManAndHisFriend: [\n    'שקר',\n    'כיבוד הורים',\n    'לפני עיוור',\n    'כיבוד תלמידי חכמים',\n    'לשון הרע',\n    'בין ישראל לגוי',\n    'חוקות הגוי',\n    'גרים',\n    'עבודה זרה',\n    'לא תחנם',\n    'צדקה',\n    'הלכות צדקה',\n    'מעשר כספים'\n  ],\n  betweenIsraelAndGentiles: ['לא תחנם', 'עבודה זרה', 'גרים', 'חוקות הגוי'],\n  charity: ['מעשר כספים'],\n  circleOfLife: [\n    'שגרת בוקר',\n    'שגרת ערב',\n    'קעקוע',\n    'נדרים ושבועות',\n    'שילוח הקן',\n    'ברית מילה',\n    'בל תשחית',\n    'גילוח - תער',\n    'לא ילבש',\n    'שעטנז'\n  ],\n  destructionToSalvation: ['ארץ ישראל', 'חורבן', 'גאולה', 'בית מקדש'],\n  educationAndCounselingAndNames: ['מנהגים', 'קבלה', 'אינטרנט', 'חזרה בתשובה'],\n  kosherKitchen: [\n    'תולעים',\n    'מאכלי ובישול גוי',\n    'כשרות הבשר',\n    'בשר בחלב',\n    'הגעלת וטבילת כלים',\n    'תרופות והמרחב הציבורי',\n    'הפרשת חלה',\n    'מצוות התלויות בארץ',\n    'כלאים',\n    'תרומות ומעשות',\n    'ערלה',\n    'שמיטה',\n    'מאכלים אסורים מחמת סכנה',\n    'יין נסך וסתם יינם'\n  ],\n  marriageAndPurity: [\n    'ממזרות ויוחסין',\n    'גיור ובירורי יהדות',\n    'מניעת היריון, הפלות',\n    'ייחוד',\n    'נדה וטבילה',\n    'טומאת כהנים',\n    'נישואין',\n    'גירושין',\n    'אישות',\n    'צניעות',\n    'יבום וחליצה',\n    'פריה ורביה'\n  ],\n  monetary: [\n    'מקח וממכר',\n    'מי שפרע',\n    'אונאה ומקח טעות',\n    'גוי',\n    'מצרנות',\n    'מתנה',\n    'אסמכתא, גמירות דעת',\n    'אונס ומודעה',\n    'עובד ומעביד',\n    'שטרות',\n    'בל תלין',\n    'בית הדין',\n    'דינא דמלכותא',\n    'עדות',\n    'וועד בית',\n    'חוזים והסכמים',\n    'שוכר',\n    'שוכרים וושתפים',\n    'הלוואה',\n    'פועלים',\n    'ערבות',\n    'דינא דגרמי',\n    'ערכאות',\n    'שומרים',\n    'ירושה',\n    'שליחות',\n    'שכירות פועלים',\n    'שירותי קבלנות',\n    'השבת אבידה',\n    'גזילה וגנבה',\n    'נזקים',\n    'תיווך והשקעות',\n    'ריבית',\n    'שכנים',\n    'מיסים',\n    'זכויות יוצרים',\n    'שואל'\n  ],\n  mourning: ['שבעה', 'אבלות כללי', 'לוויה וקבורה', 'יארצייט'],\n  prayersAndBlessings: ['תפילה', 'ברכות ההודיה', 'ברכות הנהנין'],\n  sabbath: [\n    'מלאכות שבת',\n    'אמירה לגוי',\n    'הנאה ממלאכה אסורה',\n    'מצוות השבת',\n    'כבוד השבת',\n    'תפילות בשבת',\n    'סעודות',\n    'קידוש והבדלה',\n    'קבלת שבת והדלקת נרות',\n    'טיפול בחולה בשבת',\n    'עירוב',\n    'מוקצה',\n    'ערב שבת'\n  ],\n  synagogueAndSacredObjects: [\n    'בית כנסת',\n    'תפילין',\n    'גניזה',\n    'מזוזה',\n    'קדושת ספרים',\n    'ספר תורה'\n  ],\n  faithAndView: [],\n  customs: []\n};\n\nexport const languages = ['he', 'en'] as const;\n\nexport const decodeJwt = (token: string) => {\n  try {\n    return JSON.parse(atob(token.split('.')[1]));\n  } catch (e) {\n    return { e };\n  }\n};\n","import React, {\n  createContext,\n  Dispatch,\n  memo,\n  SetStateAction,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState\n} from 'react';\nimport { useQuery } from 'react-query';\n\nimport { ChildrenProps, languages, loginObj } from '../types';\nimport { authApi, localesApi } from '../api';\nimport { decodeJwt, languages as languagesArray } from '../utils';\n\ninterface context {\n  locale: { [key: string]: string };\n  setSelectedLanguage: Dispatch<SetStateAction<languages>>;\n  selectedLanguage: languages;\n  login: (body: loginObj) => Promise<boolean>;\n  user: { fullName: string; username: string };\n}\n\nconst Context = createContext<context>({\n  locale: {},\n  setSelectedLanguage: () => undefined,\n  selectedLanguage: 'he',\n  login: () => Promise.resolve(false),\n  user: { fullName: '', username: '' }\n});\n\nconst ClientProvider = (props: ChildrenProps) => {\n  const { children } = props;\n  const [user, setUser] = useState({ fullName: '', username: '' });\n\n  // Locales handlers\n  const [selectedLanguage, setSelectedLanguage] = useState<languages>('he');\n  const [localesData, setLocalsData] = useState<\n    Record<languages, Record<string, string>>\n  >(\n    languagesArray.reduce((acc, language) => {\n      acc[language] = {};\n      return acc;\n    }, {} as Record<languages, Record<string, string>>)\n  );\n\n  useQuery(localesApi.name, localesApi.get, {\n    onSuccess: (data) => {\n      setLocalsData(\n        data.reduce(\n          (acc, localeObj) => {\n            const { key, translation } = localeObj;\n            Object.entries(translation).forEach(([translationLang, value]) => {\n              acc[translationLang][key] = value;\n            });\n            return acc;\n          },\n          languagesArray.reduce((acc, lang) => {\n            acc[lang] = {};\n            return acc;\n          }, {} as any)\n        )\n      );\n    }\n  });\n\n  const locale = useMemo(() => localesData[selectedLanguage], [\n    selectedLanguage,\n    localesData\n  ]);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const { username, fullName } = decodeJwt(token);\n      setUser({ username, fullName });\n    }\n  }, []);\n\n  const login = useCallback(async (body: loginObj) => {\n    const token = await authApi.login(body);\n    if (typeof token === 'string') {\n      const { username, fullName } = decodeJwt(token);\n      if (username && fullName) {\n        setUser({ username, fullName });\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return false;\n  }, []);\n\n  return (\n    <Context.Provider\n      value={{\n        locale,\n        setSelectedLanguage,\n        selectedLanguage,\n        login,\n        user\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport default memo(ClientProvider);\n\nexport const useClientContext = () => useContext(Context);\n","import React, { memo } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Box from '@material-ui/core/Box';\nimport { useClientContext } from '../providers/ClientProvider';\n\nconst createClasses = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: theme.palette.background.paper,\n    height: '100px',\n    justifyContent: 'center',\n    top: '0'\n  }\n}));\n\nconst Header = () => {\n  const classes = createClasses();\n  const { selectedLanguage } = useClientContext();\n\n  return (\n    <>\n      <Box height=\"130px\" />\n\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Typography variant=\"h1\" align=\"center\" color=\"textSecondary\">\n          {selectedLanguage === 'he' && '!'}Sheilta`S\n          {selectedLanguage !== 'he' && '!'}\n        </Typography>\n      </AppBar>\n    </>\n  );\n};\n\nexport default memo(Header);\n","import React, { useCallback, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Formik, Form, Field } from 'formik';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nimport { useClientContext } from '../providers/ClientProvider';\nimport Header from '../components/Header';\n\nconst createClasses = makeStyles((theme) => ({\n  container: {\n    height: '100%'\n  },\n  formContainer: {\n    minWidth: '300px',\n    minHeight: '200px'\n  },\n  form: {\n    padding: '30px',\n    gridGap: theme.spacing(2)\n  },\n  button: {\n    borderRadius: '30px',\n    width: '100%',\n    top: '12px'\n  }\n}));\n\nconst LoginPage = () => {\n  const classes = createClasses();\n  const history = useHistory();\n  const [error, toggleError] = useState(false);\n  const { locale, login } = useClientContext();\n\n  const onSubmit = useCallback(\n    async (values) => {\n      const loginRes = await login(values);\n      console.log('loginRes', loginRes);\n      if (loginRes) {\n        history.push('/editor');\n      } else {\n        toggleError(true);\n      }\n    },\n    [history, login]\n  );\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      className={classes.container}\n      item\n      xs\n    >\n      <Header />\n      <Paper elevation={3} className={classes.formContainer}>\n        <Grid\n          container\n          item\n          justify=\"center\"\n          alignItems=\"center\"\n          className={classes.formContainer}\n          direction=\"column\"\n        >\n          {error && <Typography>שם משתמש או סיסמא שגויים</Typography>}\n          <Formik\n            initialValues={{\n              username: '',\n              password: ''\n            }}\n            onSubmit={onSubmit}\n          >\n            {(formikProps) => {\n              const { handleChange } = formikProps;\n              return (\n                <Grid\n                  component={Form}\n                  container\n                  direction=\"column\"\n                  className={classes.form}\n                >\n                  <Field\n                    onChange={handleChange}\n                    name=\"username\"\n                    as={TextField}\n                    label={locale.username}\n                    variant=\"outlined\"\n                  />\n                  <Field\n                    onChange={handleChange}\n                    name=\"password\"\n                    as={TextField}\n                    label={locale.password}\n                    type=\"password\"\n                    variant=\"outlined\"\n                  />\n                  <Grid container justify=\"center\">\n                    <Grid component={Box} position=\"absolute\" item xs={7}>\n                      <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}\n                      >\n                        {locale.login}\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              );\n            }}\n          </Formik>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default LoginPage;\n","import React, { useCallback, memo, useMemo } from 'react';\nimport { Formik, Form, Field, useFormikContext } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport MuiSelect from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport { articlesApi } from '../api';\nimport { useClientContext } from '../providers/ClientProvider';\nimport { categoriesKeys, isType, subcategoriesHebrew } from '../types';\nimport {\n  categoriesKeysArray,\n  mapCategoriesKeysToHebrewSubcategories\n} from '../utils';\nimport { Article } from '../types';\nimport Header from '../components/Header';\nimport { useHistory } from 'react-router';\n\nconst createClasses = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: theme.palette.background.paper,\n    minHeight: '70px',\n    marginBottom: '30px'\n  },\n  paper: {\n    backgroundColor: '#ccbb9e !important',\n    padding: '30px'\n  },\n  input: {\n    backgroundColor: theme.palette.background.default\n  }\n}));\n\nconst useMapKeyToOption = () => {\n  const { locale } = useClientContext();\n\n  return (withLocale = true) => (key: string) => ({\n    value: key,\n    name: withLocale ? locale[key] : key\n  });\n};\n\ninterface SelectOption {\n  name: string;\n  value: string;\n}\n\ninterface SelectProps<T = string> {\n  data: {\n    label: string;\n    name: T;\n    options: SelectOption[];\n  };\n}\n\ninterface FormikValues {\n  title: string;\n  category: categoriesKeys | '';\n  subcategory: subcategoriesHebrew | '';\n  content: string;\n}\n\ntype selectValues = 'category' | 'subcategory';\n\nconst Select = memo((props: SelectProps<selectValues>) => {\n  const { data } = props;\n  const classes = createClasses();\n  const { label, name, options } = data;\n  const { handleChange, errors, touched } = useFormikContext<FormikValues>();\n  const error = useMemo(() => touched[name] && errors[name], [\n    errors,\n    name,\n    touched\n  ]);\n  return (\n    <FormControl variant=\"outlined\" fullWidth>\n      <InputLabel>\n        <Typography>{label}</Typography>\n      </InputLabel>\n      <Field\n        name={name}\n        label={label}\n        as={MuiSelect}\n        onChange={handleChange}\n        error={error}\n        MenuProps={{\n          disablePortal: true\n        }}\n        inputProps={{\n          className: classes.input\n        }}\n      >\n        {options.map((option) => {\n          const { value, name } = option;\n          return (\n            <MenuItem key={value} value={value}>\n              <Typography>{name}</Typography>\n            </MenuItem>\n          );\n        })}\n      </Field>\n      <FormHelperText error={!!error}>{error}</FormHelperText>\n    </FormControl>\n  );\n});\n\nconst FormikForm = () => {\n  const {\n    handleChange,\n    values,\n    errors,\n    touched\n  } = useFormikContext<FormikValues>();\n  const { locale } = useClientContext();\n  const classes = createClasses();\n\n  const { category } = values;\n\n  const mapKeyToOption = useMapKeyToOption();\n\n  const categoriesData = useMemo(\n    () => [\n      {\n        label: locale.category,\n        name: 'category' as selectValues,\n        options: categoriesKeysArray.map(mapKeyToOption())\n      },\n      {\n        label: locale.subcategory,\n        name: 'subcategory' as selectValues,\n        options:\n          mapCategoriesKeysToHebrewSubcategories[\n            category as categoriesKeys\n          ]?.map(mapKeyToOption(false)) || []\n      }\n    ],\n    [category, locale.category, locale.subcategory, mapKeyToOption]\n  );\n\n  const theme = useTheme();\n  const isMdDown = useMediaQuery(theme.breakpoints.down('md'));\n  const rows = useMemo(() => (isMdDown ? 5 : 10), [isMdDown]);\n\n  return (\n    <Grid container component={Form}>\n      <Grid container>\n        <Grid component={Box} container my={1}>\n          <Field\n            name=\"title\"\n            as={TextField}\n            onChange={handleChange}\n            label={locale.articleName}\n            variant=\"outlined\"\n            fullWidth\n            helperText={touched.title && errors.title}\n            error={errors.title && touched.title}\n            InputProps={{\n              className: classes.input\n            }}\n          />\n        </Grid>\n        {categoriesData.map((data) => (\n          <Grid container component={Box} my={1} key={data.label}>\n            <Select data={data} />\n          </Grid>\n        ))}\n        <Grid container component={Box} my={1}>\n          <Field\n            name=\"content\"\n            as={TextField}\n            multiline\n            onChange={handleChange}\n            label={locale.content}\n            variant=\"outlined\"\n            fullWidth\n            rows={rows}\n            helperText={touched.content && errors.content}\n            error={errors.content && touched.content}\n            InputProps={{\n              className: classes.input\n            }}\n          />\n        </Grid>\n        <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n          <Typography>{locale.upload}</Typography>\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst EditorPage = () => {\n  const classes = createClasses();\n  const { locale } = useClientContext();\n  const history = useHistory();\n\n  const initialValues: FormikValues = useMemo(\n    () => ({\n      title: '',\n      category: '',\n      subcategory: '',\n      content: ''\n    }),\n    []\n  );\n\n  const goToContentsPage = useCallback(() => {\n    history.push('/contents');\n  }, [history]);\n\n  const validate = useCallback(\n    (values: FormikValues) =>\n      Object.entries(values).reduce((acc, [key, value]) => {\n        if (!value && key !== 'subcategory') {\n          acc[key] = locale.requiredField;\n        }\n        return acc;\n      }, {} as Record<string, string>),\n    [locale.requiredField]\n  );\n\n  const onSubmit = useCallback(\n    async (values: FormikValues) => {\n      if (isType<Omit<Article, '_id'>>(values, ['content', 'category'])) {\n        const res = await articlesApi.post(values);\n        alert(\n          typeof res !== 'string'\n            ? locale.articleAddedSuccessfully\n            : locale.serverError\n        );\n      }\n    },\n    [locale.articleAddedSuccessfully, locale.serverError]\n  );\n\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\">\n      <Header />\n      <Box className={classes.paper} component={Paper} width=\"100%\" mx={2}>\n        <Grid container alignItems=\"center\" justify=\"space-between\">\n          <Typography> {locale.editorPageTitle}:</Typography>\n          <Button\n            variant=\"contained\"\n            onClick={goToContentsPage}\n            color=\"secondary\"\n          >\n            <Typography>{locale.toContentsPage}</Typography>\n          </Button>\n        </Grid>\n        <Formik\n          validate={validate}\n          initialValues={initialValues}\n          onSubmit={onSubmit}\n        >\n          <FormikForm />\n        </Formik>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default memo(EditorPage);\n","import React, { useMemo, memo } from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { ChildrenProps } from '../types';\n\ninterface Props extends ChildrenProps {\n  path: string;\n}\n\nconst PrivateRoute = (props: Props) => {\n  const { children, path } = props;\n\n  const isAuthorized = useMemo(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const { exp } = JSON.parse(atob(token.split('.')[1]));\n        return exp ? exp * 1000 > Date.now() : false;\n      } catch (e) {\n        localStorage.removeItem('token');\n        return false;\n      }\n    }\n    return false;\n  }, []);\n  console.log('isAuthorized', isAuthorized);\n  console.log('path', path);\n  return isAuthorized ? (\n    // TODO remove when more routes\n    path === '/' ? (\n      <Redirect to={'/editor'} />\n    ) : (\n      <Route path={path}>{children}</Route>\n    )\n  ) : (\n    <Redirect to={'/'} />\n  );\n};\n\nexport default memo(PrivateRoute);\n","import React, { memo } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport { useQuery } from 'react-query';\n\nimport { isType, User } from '../types';\nimport { articlesApi } from '../api';\nimport Header from '../components/Header';\nimport { useClientContext } from '../providers/ClientProvider';\n\nconst ContentsPage = () => {\n  const { data: contents } = useQuery([articlesApi.name, {}], articlesApi.get);\n  const { locale } = useClientContext();\n\n  return (\n    <Grid>\n      <Header />\n\n      {contents?.length &&\n        contents.map((content) => {\n          const {\n            author,\n            title,\n            content: textContent,\n            category,\n            subcategory,\n            updatedAt\n          } = content;\n\n          const { fullName } = isType<User>(author, 'fullName')\n            ? author\n            : ({} as any);\n\n          return (\n            <Grid key={title}>\n              <Grid container alignItems=\"baseline\">\n                <Typography variant=\"h2\">{title}</Typography>\n                <Typography variant=\"subtitle1\"> / {updatedAt}</Typography>\n              </Grid>\n              <Typography variant=\"subtitle1\">{`${locale.category}: ${locale[category]}`}</Typography>\n              {subcategory && (\n                <Typography variant=\"subtitle1\">\n                  {`${locale.subcategory}: ${\n                    locale[subcategory] || subcategory\n                  }`}\n                </Typography>\n              )}\n              <Typography variant=\"subtitle1\">\n                {`${locale.author}: ${fullName}`}\n              </Typography>\n              <Typography>{textContent}</Typography>\n            </Grid>\n          );\n        })}\n    </Grid>\n  );\n};\n\nexport default memo(ContentsPage);\n","import React, { memo } from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport LoginPage from './pages/Login';\nimport EditorPage from './pages/Editor';\nimport PrivateRoute from './pages/PrivateRoute';\nimport ContentsPage from './pages/Contents';\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        {/*  Should be /login*/}\n        <Route path=\"/\" exact>\n          <LoginPage />\n        </Route>\n\n        <PrivateRoute path=\"/editor\">\n          <EditorPage />\n        </PrivateRoute>\n        <PrivateRoute path=\"/contents\">\n          <ContentsPage />\n        </PrivateRoute>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default memo(Router);\n","import React, { memo, ReactNode } from 'react';\nimport { Grid } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\ninterface Props {\n  children: ReactNode;\n}\n\nconst createClasses = makeStyles((theme) => ({\n  container: {\n    backgroundColor: theme.palette.background.default,\n    height: '100vh'\n  }\n}));\n\nconst PageTemplate = (props: Props) => {\n  const { children } = props;\n  const classes = createClasses();\n  return (\n    <Grid container direction=\"column\" className={classes.container}>\n      {children}\n    </Grid>\n  );\n};\n\nexport default memo(PageTemplate);\n","import React, { memo, useMemo } from 'react';\nimport {\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n  ThemeProvider as MuiThemeProvider\n} from '@material-ui/core/styles';\n\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\nimport responsiveFontSizes from '@material-ui/core/styles/responsiveFontSizes';\nimport createPalette from '@material-ui/core/styles/createPalette';\n\nimport { ChildrenProps } from '../types';\nimport { useClientContext } from './ClientProvider';\n\n// Configure JSS\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\n// declare module '@material-ui/core/styles/createPalette' {\n//   interface Palette {\n//     neutral: Palette['primary'];\n//   }\n//   interface PaletteOptions {\n//     neutral: PaletteOptions['primary'];\n//   }\n// }\n\nconst palette = createPalette({\n  background: {\n    default: '#fff8ed',\n    paper: '#ffedcf'\n  },\n  // info: {\n  //   main: '#000000'\n  // },\n  primary: {\n    //   main: '#ffedcf',\n    //   light: '#fff9ef',\n    //   dark: '#ccbb9e'\n    // },\n    main: 'rgba(0, 0, 0, 0.54)',\n    light: '#fff9ef',\n    dark: '#ccbb9e'\n  },\n  secondary: {\n    main: '#1f3c64',\n    light: '#4e6692',\n    dark: '#001739'\n  }\n  // text: {\n  //   primary: '#000000',\n  //   secondary: '#ffffff'\n  // }\n\n  // info: {\n  //   main: 'rgba(0, 0, 0, 0.54)'\n  // }\n});\n\nconst ThemeProvider = (props: ChildrenProps) => {\n  const { children } = props;\n  const { selectedLanguage } = useClientContext();\n\n  const direction = useMemo(() => (selectedLanguage === 'he' ? 'rtl' : 'ltr'), [\n    selectedLanguage\n  ]);\n\n  const theme: any = useMemo(\n    () =>\n      responsiveFontSizes(\n        createMuiTheme({\n          palette,\n          overrides: {\n            MuiInputBase: {\n              root: {\n                backgroundColor: palette.background.default\n              }\n            },\n            MuiFormLabel: {\n              root: {}\n            },\n            // @ts-ignore\n            MuiOutlinedInput: {\n              root: {\n                // '&.MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                // border: `1px solid ${palette.info.main}`\n                // }\n              }\n            },\n            MuiButton: {\n              root: {\n                textTransform: 'capitalize',\n                color: palette.background.default\n              }\n            }\n          },\n          direction\n        })\n      ),\n    [direction]\n  );\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <StylesProvider jss={jss}>\n        <div dir={direction}>{children}</div>\n      </StylesProvider>\n    </MuiThemeProvider>\n  );\n};\n\nexport default memo(ThemeProvider);\n","import React, { memo } from 'react';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport Router from './Router';\nimport PageTemplate from './pages/PageTemplate';\nimport ClientProvider from './providers/ClientProvider';\nimport ThemeProvider from './providers/ThemeProvider';\n\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false\n    }\n  }\n});\n\nconst App = () => {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ClientProvider>\n        <ReactQueryDevtools position=\"bottom-left\" initialIsOpen={false} />\n\n        <ThemeProvider>\n          <PageTemplate>\n            <Router />\n          </PageTemplate>\n        </ThemeProvider>\n      </ClientProvider>\n    </QueryClientProvider>\n  );\n};\n\nexport default memo(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}